image: registry.gitlab.com/lingrino/docker/docker:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/

before_script:
  - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}

stages:
  - lint
  - build
  - publish

##########################
### Atlantis           ###
##########################
lint-atlantis:
  stage: lint
  script:
    - hadolint atlantis.Dockerfile

build-atlantis:
  stage: build
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/atlantis:latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}/atlantis:latest -t ${CI_REGISTRY_IMAGE}/atlantis:${CI_COMMIT_SHA} -f atlantis.Dockerfile .
    - docker push ${CI_REGISTRY_IMAGE}/atlantis:${CI_COMMIT_SHA}

publish-atlantis:
  stage: publish
  only: [ master ]
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/atlantis:${CI_COMMIT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}/atlantis:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/atlantis:latest
    - docker push ${CI_REGISTRY_IMAGE}/atlantis:latest
    # Push to Heroku for a release
    - heroku container:login
    - docker tag ${CI_REGISTRY_IMAGE}/atlantis:${CI_COMMIT_SHA} registry.heroku.com/lingrino-atlantis/web
    - docker push registry.heroku.com/lingrino-atlantis/web
    - heroku container:release web -a lingrino-atlantis

##########################
### CI                 ###
##########################
lint-ci:
  stage: lint
  script:
    - hadolint ci.Dockerfile

build-ci:
  stage: build
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/ci:latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}/ci:latest -t ${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHA} -f ci.Dockerfile .
    - docker push ${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHA}

publish-ci:
  stage: publish
  only: [ master ]
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/ci:latest
    - docker push ${CI_REGISTRY_IMAGE}/ci:latest

##########################
### Docker             ###
##########################
lint-docker:
  stage: lint
  script:
    - hadolint docker.Dockerfile

build-docker:
  stage: build
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/docker:latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}/docker:latest -t ${CI_REGISTRY_IMAGE}/docker:${CI_COMMIT_SHA} -f docker.Dockerfile .
    - docker push ${CI_REGISTRY_IMAGE}/docker:${CI_COMMIT_SHA}

publish-docker:
  stage: publish
  only: [ master ]
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/docker:${CI_COMMIT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}/docker:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/docker:latest
    - docker push ${CI_REGISTRY_IMAGE}/docker:latest
